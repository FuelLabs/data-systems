apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fuel-streams-publisher.fullname" . }}
  labels:
    {{- include "fuel-streams-publisher.labels" . | nindent 4 }}
spec:
  # Define the headless service that governs this StatefulSet
  serviceName: {{ include "fuel-streams-publisher.fullname" . | quote }}
  # Handle replica count unless autoscaling is enabled
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.config.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fuel-streams-publisher.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # Prometheus scraping configuration
        {{- if .Values.prometheus.enabled }}
        prometheus.io/scrape: {{ .Values.prometheus.scrape | quote }}
        prometheus.io/port: {{ .Values.prometheus.port | quote }}
        prometheus.io/path: {{ .Values.prometheus.path | quote }}
        {{- end }}
        # Add checksums to force pod restart when configs change
        {{- if (lookup "v1" "ConfigMap" .Release.Namespace (include "fuel-streams-publisher.fullname" .)) }}
        checksum/config: {{ include (print $.Template.BasePath "/env-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if (lookup "v1" "Secret" .Release.Namespace (include "fuel-streams-publisher.fullname" .)) }}
        checksum/secrets: {{ include (print $.Template.BasePath "/env-secrets.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.config.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "fuel-streams-publisher.labels" . | nindent 8 }}
        {{- with .Values.config.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.config.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fuel-streams-publisher.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.config.securityContext | nindent 8 }}
      # Initialize persistent volumes with correct permissions
      {{- if .Values.persistence.enabled }}
      initContainers:
        - name: update-{{ .Values.persistence.data.name }}-permissions
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/chown"]
          args: ["-R", "1000:1000", "{{ .Values.persistence.data.mountPath }}"]
          volumeMounts:
            - name: {{ .Values.persistence.data.name }}
              mountPath: {{ .Values.persistence.data.mountPath }}
        - name: update-{{ .Values.persistence.temp.name }}-permissions
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/chown"]
          args: ["-R", "1000:1000", "{{ .Values.persistence.temp.mountPath }}"]
          volumeMounts:
            - name: {{ .Values.persistence.temp.name }}
              mountPath: {{ .Values.persistence.temp.mountPath }}
      {{- end }}
      # Main application container
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Define container ports for application and metrics
          ports:
            - name: http
              containerPort: {{ int .Values.service.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ int .Values.prometheus.port }}
              protocol: TCP
          # Health check probes
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.config.resources | nindent 12 }}
          # Environment variables from configmap and secrets
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
            {{- end }}
            {{- if .Values.envFrom }}
            envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
            {{- end }}

          # Mount persistent volumes if enabled
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: {{ .Values.persistence.data.name }}
              mountPath: {{ .Values.persistence.data.mountPath }}
              readOnly: false
            - name: {{ .Values.persistence.temp.name }}
              mountPath: {{ .Values.persistence.temp.mountPath }}
              readOnly: false
          {{- end }}
      # Node assignment rules
      {{- with .Values.config.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.config.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.config.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  # Persistent volume claims configuration
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.persistence.data.name }}
        {{- with .Values.persistence.data.annotations }}
        annotations:
          {{- toYaml . | nindent 8 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.data.accessMode }}
        storageClassName: {{ .Values.persistence.data.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.data.size }}
    - metadata:
        name: {{ .Values.persistence.temp.name }}
        {{- with .Values.persistence.temp.annotations }}
        annotations:
          {{- toYaml . | nindent 8 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.temp.accessMode }}
        storageClassName: {{ .Values.persistence.temp.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistence.temp.size }}
  {{- end }}
