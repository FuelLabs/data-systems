{{ if .Values.prometheus.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  {{- include "common.metadata" (dict "service" "prometheus" "context" .) | nindent 2 }}
data:
  prometheus.yml: {{ tpl (.Files.Get (printf "files/%s/monitoring/prometheus.yaml" (.Values.prometheus.configFilesFolders.prometheus | default "master"))) . | quote }}
---
apiVersion: v1
kind: Service
metadata:
  {{- include "common.metadata" (dict "service" "prometheus" "context" .) | nindent 2 }}
spec:
  ports:
    - name: prometheus
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    {{- include "fuel-local.selectorLabels" . | nindent 4 }}
---
{{ if .Values.config.createRoles }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  {{- include "common.metadata" (dict "service" "prometheus-role" "context" .) | nindent 2 }}
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  {{- include "common.metadata" (dict "service" "prometheus-rolebinding" "context" .) | nindent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "fuel-local.fullname" . }}-prometheus-role
subjects:
  - kind: ServiceAccount
    name: {{ include "fuel-local.serviceAccountName" . }}
    namespace: {{ .Values.config.namespace }}
{{ end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- include "common.metadata" (dict "service" "prometheus" "context" .) | nindent 2 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "fuel-local.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fuel-local.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "common.security-context" (dict "service" "prometheus" "context" .) | nindent 6 }}
      {{- include "common.pod-anti-affinity" (dict "service" "prometheus" "context" .) | nindent 6 }}
      serviceAccountName: {{ include "fuel-local.serviceAccountName" . }}
      containers:
        - name: prometheus
          {{- include "common.container-security-context" (dict "service" "prometheus" "context" .) | nindent 10 }}
          image: "{{ .Values.prometheus.image }}:{{ .Values.prometheus.tag }}"
          ports:
            - name: "http"
              containerPort: 9090
          {{- include "common.probes" (dict "service" "prometheus" "serviceProbes" .Values.prometheus.probes "context" .) | nindent 10 }}
          {{- include "common.resources" (dict "service" "prometheus" "context" .) | nindent 10 }}
          volumeMounts:
            - mountPath: /etc/prometheus/prometheus.yml
              name: prometheus-config
              subPath: prometheus.yml
            - mountPath: /prometheus
              name: prometheus-data
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ include "fuel-local.fullname" . }}-prometheus
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: {{ include "fuel-local.fullname" . }}-prometheus-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "fuel-local.fullname" . }}-prometheus-data
  {{- include "common.metadata" (dict "service" "prometheus" "context" .) | nindent 2 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ default "10Gi" .Values.prometheus.storage }}
{{ end }}
