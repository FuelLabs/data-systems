suite: Testing Publisher statefulset
templates:
  - templates/publisher/statefulset.yaml
tests:
  - it: should create deployment with correct name
    set:
      publisher.enabled: true
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: metadata.name
          value: RELEASE-NAME-sv-publisher

  - it: should set correct image and tag
    set:
      publisher.enabled: true
      publisher.image.repository: ghcr.io/fuellabs/sv-publisher
      publisher.image.tag: latest
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: ghcr.io/fuellabs/sv-publisher:latest

  - it: should use chart version when tag is not specified
    set:
      publisher.enabled: true
      publisher.image.repository: ghcr.io/fuellabs/sv-publisher
      publisher.image.tag: null
      Chart:
        Version: "1.0"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: ghcr.io/fuellabs/sv-publisher:1.0

  - it: should merge environment variables correctly
    set:
      publisher.enabled: true
      publisher.env:
        CHAIN_CONFIG: "testnet" # Override default
        NEW_VAR: "new-value" # Add new var
      publisher.extraEnv:
        - name: SIMPLE_VAR
          value: "simple-value"
        - name: SECRET_VAR
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: my-key
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: CHAIN_CONFIG
            value: "testnet"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NEW_VAR
            value: "new-value"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SIMPLE_VAR
            value: "simple-value"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SECRET_VAR
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: my-key

  - it: should handle storage configuration correctly
    set:
      publisher.enabled: true
      publisher.storage:
        name: rocks-db
        size: 500Gi
        mountPath: /mnt/db
        storageClass: gp3-generic
        accessMode: ReadWriteOnce
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: rocks-db
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /mnt/db
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: update-rocks-db
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts[0].name
          value: rocks-db
      - equal:
          path: spec.template.spec.initContainers[0].volumeMounts[0].mountPath
          value: /mnt/db
      - equal:
          path: spec.volumeClaimTemplates[0].metadata.name
          value: rocks-db
      - equal:
          path: spec.volumeClaimTemplates[0].spec.accessModes[0]
          value: ReadWriteOnce
      - equal:
          path: spec.volumeClaimTemplates[0].spec.storageClassName
          value: gp3-generic
      - equal:
          path: spec.volumeClaimTemplates[0].spec.resources.requests.storage
          value: 500Gi

  - it: should handle storage with minimal configuration
    set:
      publisher.enabled: true
      publisher.storage:
        name: data
        size: 10Gi
        mountPath: /data
        storageClass: standard
        accessMode: ReadWriteOnce
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0]
          value:
            name: data
            mountPath: /data
            readOnly: false
      - equal:
          path: spec.volumeClaimTemplates[0].spec.resources.requests.storage
          value: 10Gi

  - it: should set labels and annotations from service config
    set:
      publisher.enabled: true
      publisher.config:
        labels:
          app: "publisher"
          custom: "local"
        annotations:
          service: "publisher"
          monitoring: "enabled"
    asserts:
      - isSubset:
          path: metadata.labels
          content:
            app.kubernetes.io/name: fuel-streams
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/component: publisher
            app: "publisher"
            custom: "local"
      - isSubset:
          path: metadata.annotations
          content:
            service: "publisher"
            monitoring: "enabled"

  - it: should merge global and publisher-specific configurations
    set:
      publisher.enabled: true
      publisher.config.livenessProbe:
        initialDelaySeconds: 45
        httpGet:
          path: /custom-health
          port: 9090
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: /custom-health
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.port
          value: 9090
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 45
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.periodSeconds
          value: 20

  - it: should set replicas when autoscaling is disabled
    set:
      publisher.enabled: true
      publisher.autoscaling.enabled: false
      publisher.replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3

  - it: should replace security contexts with provided values
    set:
      publisher.enabled: true
      publisher.config:
        securityContext:
          fsGroup: 2500
        containerSecurityContext:
          runAsUser: 2500
    asserts:
      - equal:
          path: spec.template.spec.securityContext
          value:
            fsGroup: 2500
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            capabilities:
              drop: [ALL]
            readOnlyRootFilesystem: true
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            runAsUser: 2500
            runAsGroup: 1000
            runAsNonRoot: true
            capabilities:
              drop: [ALL]
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
