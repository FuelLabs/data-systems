{{- $webserver := .Values.webserver }}
{{- $service := $webserver.service }}
{{- $tls := $webserver.tls }}
{{- $certificate := $tls.certificate }}
{{- $ingress := $tls.ingress }}
{{- $component := "webserver" -}}
{{- $secretName := printf "%s-webserver-tls-v1" (include "fuel-streams.fullname" .) -}}
{{- $serviceName := printf "%s-webserver" (include "fuel-streams.fullname" .) -}}
{{- $ingressDict := dict "root" . "context" $ingress "name" "webserver-cert-validator-v1" "component" $component -}}
{{- if and $webserver.enabled $service.host }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  {{ include "k8s.resource-metadata.default" $ingressDict | nindent 2 }}
  {{ include "k8s.resource-metadata.labels" $ingressDict | nindent 2 }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/websocket-services: {{ $serviceName }}
    external-dns.alpha.kubernetes.io/hostname: {{ $service.host }}
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    {{- if $tls.enabled }}
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    acme.cert-manager.io/http01-ingress-class: nginx
    cert-manager.io/common-name: {{ $service.host }}
    cert-manager.io/cluster-issuer: {{ $certificate.issuer }}
    {{- end }}
    {{- include "k8s.resource-metadata.annotations-raw" $ingressDict | nindent 4 }}
spec:
  ingressClassName: nginx
  {{- if $tls.enabled }}
  tls:
    - hosts:
        - {{ $service.host }}
      secretName: {{ $secretName }}
  {{- end }}
  rules:
    - host: {{ $service.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: {{ $service.port }}
{{- end }}
