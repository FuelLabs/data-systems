{{- $webserver := .Values.webserver -}}
{{- if $webserver.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- include "k8s.metadata" (dict "context" . "suffix" "-webserver") | nindent 2 }}
  annotations:
    {{- include "set-value" (dict "context" $webserver "path" "config.annotations") | nindent 4 }}
  labels:
    {{- include "fuel-streams.labels" (dict "name" "webserver" "context" .) | nindent 4 }}
    {{- include "set-value" (dict "context" $webserver "path" "config.labels") | nindent 4 }}
spec:
  {{- if not $webserver.autoscaling.enabled }}
  replicas: {{ $webserver.config.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fuel-streams.selectorLabels" (dict "name" "webserver" "context" .) | nindent 6 }}

  template:
    metadata:
      annotations:
        {{- include "set-value" (dict "context" $webserver "path" "config.podAnnotations") | nindent 8 }}
      labels:
        {{- include "fuel-streams.labels" (dict "name" "webserver" "context" .) | nindent 8 }}
        {{- include "set-value" (dict "context" $webserver "path" "config.labels") | nindent 8 }}

    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "fuel-streams.serviceAccountName" . }}
      {{- end }}

      {{- include "set-field-and-value" (dict "context" $webserver "field" "imagePullSecrets" "path" "config.imagePullSecrets") | nindent 6 }}
      {{- include "set-field-and-value" (dict "context" $webserver "field" "nodeSelector" "path" "config.nodeSelector") | nindent 6 }}
      {{- include "set-field-and-value" (dict "context" $webserver "field" "affinity" "path" "config.affinity") | nindent 6 }}
      {{- include "set-field-and-value" (dict "context" $webserver "field" "tolerations" "path" "config.tolerations") | nindent 6 }}
      {{- include "k8s.security-context" (dict "context" . "service" "webserver") | nindent 6 }}

      containers:
        - name: webserver
          image: "{{ $webserver.image.repository }}:{{ $webserver.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ $webserver.image.pullPolicy }}

          ports:
            - name: webserver
              containerPort: {{ $webserver.port }}
              protocol: TCP
          {{- if $webserver.ports }}
            {{- toYaml $webserver.ports | nindent 12 }}
          {{- end }}

          {{- include "set-field-and-value" (dict "context" $webserver "field" "resources" "path" "config.resources") | nindent 10 }}
          {{- include "k8s.probes" (dict "context" . "service" "webserver") | nindent 10 }}
          {{- include "k8s.container-security-context" (dict "context" . "service" "webserver") | nindent 10 }}

          envFrom:
            - configMapRef:
                name: {{ include "fuel-streams.fullname" $ }}
                optional: true
            - secretRef:
                name: {{ include "fuel-streams.fullname" $ }}
                optional: true
            {{- with $webserver.envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          env:
            {{- range $key, $value := $webserver.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- with $webserver.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: STREAMER_MAX_WORKERS
              value: "{{ .Values.app.streamerMaxWorkers }}"
            - name: STREAMER_API_PORT 
              value: "{{ .Values.webserver.port }}"
            - name: JWT_AUTH_SECRET
              value: "{{ .Values.app.jwtAuthSecret }}"
            - name: USE_ELASTIC_LOGGING
              value: "{{ .Values.app.useElasticLogging }}"
            - name: USE_METRICS
              value: "{{ .Values.app.useMetrics }}"
            - name: AWS_S3_ENABLED
              value: "true"
            - name: NATS_URL
              value: "{{ include "fuel-streams.fullname" . }}-nats-publisher:4222"
            - name: NETWORK
              value: "{{ .Values.app.network }}"
            - name: PORT
              value: "{{ $webserver.port }}"

{{- include "k8s.hpa" (dict "context" . "service" (dict "name" "webserver" "autoscaling" $webserver.autoscaling)) }}
{{- end }}