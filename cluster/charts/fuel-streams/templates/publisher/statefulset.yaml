{{- if .Values.publisher.enabled -}}
{{- $publisher := .Values.publisher -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  {{- include "k8s.resource-metadata" (dict "root" . "context" $publisher "name" "publisher") | nindent 2 }}
spec:
  serviceName: {{ include "fuel-streams.fullname" . }}-publisher
  {{- include "k8s.pod-spec-common" (dict "root" . "context" $publisher "name" "publisher") | nindent 2 }}
  template:
    {{- include "k8s.template-metadata" (dict "root" . "context" $publisher "name" "publisher") | nindent 4 }}
    spec:
      {{- include "k8s.pod-config" (dict "root" . "context" $publisher) | nindent 6 }}

      volumes:
        - name: tmp-dir
          emptyDir: {}
        - name: var-dir
          emptyDir: {}

      initContainers:
        - name: update-{{ $publisher.storage.name }}
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args:
            - -c
            - |
              # Verify directory exists and is writable
              mkdir -p {{ $publisher.storage.mountPath }} && \
              touch {{ $publisher.storage.mountPath }}/.init-complete && \
              rm {{ $publisher.storage.mountPath }}/.init-complete
          {{- include "set-field-and-value" (dict "root" . "context" .context "field" "securityContext" "path" "config.containerSecurityContext") | nindent 10 }}
          volumeMounts:
            - name: {{ $publisher.storage.name }}
              mountPath: {{ $publisher.storage.mountPath }}

        - name: init-permissions
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /var/fuel-streams/tmp && \
              chown -R 1000:1000 /var/fuel-streams
          volumeMounts:
            - name: var-dir
              mountPath: /var/fuel-streams
          securityContext:
            runAsUser: 0
            runAsNonRoot: false

      containers:
        - name: publisher
          image: "{{ $publisher.image.repository }}:{{ $publisher.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ $publisher.image.pullPolicy }}
          command: ["/usr/src/sv-publisher"]
          args:
          # Common arguments
          - "--enable-relayer"
          - "--enable-p2p"
          - "--keypair"
          - "$(KEYPAIR)"
          - "--relayer"
          - "$(RELAYER)"
          - "--ip"
          - "0.0.0.0"
          - "--port"
          - "$(PORT)"
          - "--peering-port"
          - "30333"
          - "--utxo-validation"
          - "--poa-instant"
          - "false"
          - "--db-path"
          - "$(DB_PATH)"
          - "--nats-url"
          - "$(NATS_URL)"
          - "--sync-header-batch-size"
          - "100"
          - "--relayer-log-page-size"
          - "2000"
          - "--sync-block-stream-buffer-size"
          - "50"
          - "--max-database-cache-size"
          - "17179869184"
          - "--state-rewind-duration"
          - "136y"
          - "--request-timeout"
          - "60"
          - "--graphql-max-complexity"
          - "1000000000"
          {{- if eq $publisher.network "mainnet" }}
          # Mainnet specific args
          - "--service-name"
          - "Publisher Node (Mainnet)"
          - "--snapshot"
          - "./chain-config/mainnet"
          - "--reserved-nodes"
          - "/dnsaddr/mainnet.fuel.network"
          - "--relayer-v2-listening-contracts"
          - "0xAEB0c00D0125A8a788956ade4f4F12Ead9f65DDf"
          - "--relayer-da-deploy-height"
          - "20620434"
          {{- else if eq $publisher.network "testnet" }}
          # Testnet specific args
          - "--service-name"
          - "Publisher Node (Testnet)"
          - "--snapshot"
          - "./chain-config/testnet"
          - "--reserved-nodes"
          - "/dns4/p2p-testnet.fuel.network/tcp/30333/p2p/16Uiu2HAmDxoChB7AheKNvCVpD4PHJwuDGn8rifMBEHmEynGHvHrf,/dns4/p2p-testnet.fuel.network/tcp/30333/p2p/16Uiu2HAmHnANNk4HjAxQV66BNCRxd2MBUU89ijboZkE69aLuSn1g,/dns4/p2p-testnet.fuel.network/tcp/30333/p2p/16Uiu2HAmVE468rpkh2X1kzz8qQXmqNFiPxU5Lrya28nZdbRUdVJX"
          - "--relayer-v2-listening-contracts"
          - "0x01855B78C1f8868DE70e84507ec735983bf262dA"
          - "--relayer-da-deploy-height"
          - "5827607"
          {{- end }}
          {{- include "k8s.container-config" (dict "root" . "context" $publisher)  | nindent 10 }}
          volumeMounts:
            - name: {{ $publisher.storage.name }}
              mountPath: {{ $publisher.storage.mountPath }}
              readOnly: false
            - name: var-dir
              mountPath: /var/fuel-streams
  volumeClaimTemplates:
    - metadata:
        name: {{ $publisher.storage.name }}
      spec:
        accessModes:
          - {{ $publisher.storage.accessMode }}
        storageClassName: {{ $publisher.storage.storageClass }}
        resources:
          requests:
            storage: {{ $publisher.storage.size }}
{{- end -}}
