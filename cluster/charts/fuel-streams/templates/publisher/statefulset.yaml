{{- if .Values.publisher.enabled -}}
{{- $publisher := .Values.publisher -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  {{- include "k8s.metadata" (dict "context" . "suffix" "-publisher") | nindent 2 }}
  {{- include "set-field-and-value" (dict "context" $publisher "field" "annotations" "path" "config.annotations") | nindent 2 }}
  labels:
    {{- include "fuel-streams.labels" . | nindent 4 }}
    {{- include "set-value" (dict "context" $publisher "path" "config.labels") | nindent 4 }}
spec:
  serviceName: {{ include "fuel-streams.fullname" . }}-publisher{{- if not .Values.autoscaling.enabled }}
  replicas: {{ $publisher.config.replicaCount }}{{- end }}
  selector:
    matchLabels: {{- include "fuel-streams.selectorLabels" . | nindent 6 }}

  template:
    metadata:
      {{- include "set-field-and-value" (dict "context" $publisher "field" "annotations" "path" "config.podAnnotations") | nindent 6 }}
      labels:
        {{- include "fuel-streams.selectorLabels" . | nindent 8 }}
        {{- include "set-value" (dict "context" $publisher "path" "config.labels") | nindent 8 }}

    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "fuel-streams.serviceAccountName" . }}
      {{- end }}
      {{- include "set-field-and-value" (dict "context" $publisher "field" "imagePullSecrets" "path" "config.imagePullSecrets") | nindent 6 }}
      {{- include "set-field-and-value" (dict "context" $publisher "field" "nodeSelector" "path" "config.nodeSelector") | nindent 6 }}
      {{- include "set-field-and-value" (dict "context" $publisher "field" "affinity" "path" "config.affinity") | nindent 6 }}
      {{- include "set-field-and-value" (dict "context" $publisher "field" "tolerations" "path" "config.tolerations") | nindent 6 }}
      {{- include "k8s.security-context" (dict "context" . "service" "publisher") | nindent 6 }}

      initContainers:
        - name: update-{{ $publisher.storage.name }}
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args:
            - -c
            - |
              # Verify directory exists and is writable
              mkdir -p {{ $publisher.storage.mountPath }} && \
              touch {{ $publisher.storage.mountPath }}/.init-complete && \
              rm {{ $publisher.storage.mountPath }}/.init-complete
          {{- include "k8s.container-security-context" (dict "context" . "service" "publisher") | nindent 10 }}
          volumeMounts:
            - name: {{ $publisher.storage.name }}
              mountPath: {{ $publisher.storage.mountPath }}

      containers:
        - name: publisher
          image: "{{ $publisher.image.repository }}:{{ $publisher.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ $publisher.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ int $publisher.service.port }}
              protocol: TCP
          {{- if $publisher.ports }}
            {{- toYaml $publisher.ports | nindent 12 }}
          {{- end }}

          {{- include "set-field-and-value" (dict "context" $publisher "field" "resources" "path" "config.resources") | nindent 10 }}
          {{- include "k8s.probes" (dict "context" . "service" "publisher") | nindent 10 }}
          {{- include "k8s.container-security-context" (dict "context" . "service" "publisher") | nindent 10 }}

          env:
            {{- range $key, $value := $publisher.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- with $publisher.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          envFrom:
            - configMapRef:
                name: {{ include "fuel-streams.fullname" $ }}-network-config
            - configMapRef:
                name: {{ include "fuel-streams.fullname" $ }}-publisher
                optional: true
            - secretRef:
                name: {{ include "fuel-streams.fullname" $ }}-publisher
                optional: true
            {{- with $publisher.envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          volumeMounts:
            - name: {{ $publisher.storage.name }}
              mountPath: {{ $publisher.storage.mountPath }}
              readOnly: false

  volumeClaimTemplates:
    - metadata:
        name: {{ $publisher.storage.name }}
      spec:
        accessModes:
          - {{ $publisher.storage.accessMode }}
        storageClassName: {{ $publisher.storage.storageClass }}
        resources:
          requests:
            storage: {{ $publisher.storage.size }}
{{- end -}}
