{{- if .Values.publisher.enabled -}}
{{- $publisher := .Values.publisher -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  {{- include "k8s.metadata" (dict "context" . "suffix" "-publisher") | nindent 2 }}
  annotations:
    {{- include "set-value" (dict "context" $publisher "path" "config.annotations") | nindent 4 }}
  labels:
    {{- include "fuel-streams.labels" (dict "name" "publisher" "context" .) | nindent 4 }}
    {{- include "set-value" (dict "context" $publisher "path" "config.labels") | nindent 4 }}
spec:
  serviceName: {{ include "fuel-streams.fullname" . }}-publisher
  {{- if not $publisher.autoscaling.enabled }}
  replicas: {{ $publisher.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fuel-streams.selectorLabels" (dict "name" "publisher" "context" .) | nindent 6 }}

  template:
    metadata:
      annotations:
        {{- include "set-value" (dict "context" $publisher "path" "config.podAnnotations") | nindent 8 }}
      labels:
        {{- include "fuel-streams.labels" (dict "name" "publisher" "context" .) | nindent 8 }}
        {{- include "set-value" (dict "context" $publisher "path" "config.labels") | nindent 8 }}

    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "fuel-streams.serviceAccountName" . }}
      {{- end }}
      {{- include "set-field-and-value" (dict "context" $publisher "field" "imagePullSecrets" "path" "config.imagePullSecrets") | nindent 6 }}
      {{- include "set-field-and-value" (dict "context" $publisher "field" "nodeSelector" "path" "config.nodeSelector") | nindent 6 }}
      {{- include "set-field-and-value" (dict "context" $publisher "field" "affinity" "path" "config.affinity") | nindent 6 }}
      {{- include "set-field-and-value" (dict "context" $publisher "field" "tolerations" "path" "config.tolerations") | nindent 6 }}
      {{- include "k8s.security-context" (dict "context" . "service" "publisher") | nindent 6 }}

      volumes:
        - name: tmp-dir
          emptyDir: {}
        - name: var-dir
          emptyDir: {}

      initContainers:
        - name: update-{{ $publisher.storage.name }}
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args:
            - -c
            - |
              # Verify directory exists and is writable
              mkdir -p {{ $publisher.storage.mountPath }} && \
              touch {{ $publisher.storage.mountPath }}/.init-complete && \
              rm {{ $publisher.storage.mountPath }}/.init-complete
          {{- include "k8s.container-security-context" (dict "context" . "service" "publisher") | nindent 10 }}
          volumeMounts:
            - name: {{ $publisher.storage.name }}
              mountPath: {{ $publisher.storage.mountPath }}

        - name: init-permissions
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /var/fuel-streams/tmp && \
              chown -R 1000:1000 /var/fuel-streams
          volumeMounts:
            - name: var-dir
              mountPath: /var/fuel-streams
          securityContext:
            runAsUser: 0
            runAsNonRoot: false

      containers:
        - name: publisher
          image: "{{ $publisher.image.repository }}:{{ $publisher.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ $publisher.image.pullPolicy }}
          command: ["/usr/src/sv-publisher"]
          args:
          # Common arguments
          - "--enable-relayer"
          - "--enable-p2p"
          - "--keypair"
          - "$(KEYPAIR)"
          - "--relayer"
          - "$(RELAYER)"
          - "--ip"
          - "0.0.0.0"
          - "--port"
          - "$(PORT)"
          - "--peering-port"
          - "30333"
          - "--utxo-validation"
          - "--poa-instant"
          - "false"
          - "--db-path"
          - "$(DB_PATH)"
          - "--nats-url"
          - "$(NATS_URL)"
          - "--sync-header-batch-size"
          - "100"
          - "--relayer-log-page-size"
          - "2000"
          - "--sync-block-stream-buffer-size"
          - "50"
          - "--max-database-cache-size"
          - "17179869184"
          - "--state-rewind-duration"
          - "136y"
          - "--request-timeout"
          - "60"
          - "--graphql-max-complexity"
          - "1000000000"
          {{- if eq $publisher.network "mainnet" }}
          # Mainnet specific args
          - "--service-name"
          - "Publisher Node (Mainnet)"
          - "--snapshot"
          - "./chain-config/mainnet"
          - "--reserved-nodes"
          - "/dnsaddr/mainnet.fuel.network"
          - "--relayer-v2-listening-contracts"
          - "0xAEB0c00D0125A8a788956ade4f4F12Ead9f65DDf"
          - "--relayer-da-deploy-height"
          - "20620434"
          {{- else if eq $publisher.network "testnet" }}
          # Testnet specific args
          - "--service-name"
          - "Publisher Node (Testnet)"
          - "--snapshot"
          - "./chain-config/testnet"
          - "--reserved-nodes"
          - "/dns4/p2p-testnet.fuel.network/tcp/30333/p2p/16Uiu2HAmDxoChB7AheKNvCVpD4PHJwuDGn8rifMBEHmEynGHvHrf,/dns4/p2p-testnet.fuel.network/tcp/30333/p2p/16Uiu2HAmHnANNk4HjAxQV66BNCRxd2MBUU89ijboZkE69aLuSn1g,/dns4/p2p-testnet.fuel.network/tcp/30333/p2p/16Uiu2HAmVE468rpkh2X1kzz8qQXmqNFiPxU5Lrya28nZdbRUdVJX"
          - "--relayer-v2-listening-contracts"
          - "0x01855B78C1f8868DE70e84507ec735983bf262dA"
          - "--relayer-da-deploy-height"
          - "5827607"
          {{- end }}

          ports:
            - name: http
              containerPort: {{ int $publisher.port }}
              protocol: TCP
          {{- with $publisher.config.ports }}
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- include "set-field-and-value" (dict "context" $publisher "field" "resources" "path" "config.resources") | nindent 10 }}
          {{- include "k8s.probes" (dict "context" . "service" "publisher") | nindent 10 }}
          {{- include "k8s.container-security-context" (dict "context" . "service" "publisher") | nindent 10 }}

          env:
            - name: TMPDIR
              value: "/var/fuel-streams/tmp"
            - name: DB_PATH
              value: {{ $publisher.storage.mountPath | default "/mnt/db" | quote }}
            - name: PORT
              value: {{ $publisher.port | quote }}
            {{- with $publisher.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          envFrom:
            - configMapRef:
                name: {{ include "fuel-streams.fullname" $ }}-config
                optional: true
            - secretRef:
                name: {{ include "fuel-streams.fullname" $ }}-keys
                optional: true
            {{- with $publisher.envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          volumeMounts:
            - name: {{ $publisher.storage.name }}
              mountPath: {{ $publisher.storage.mountPath }}
              readOnly: false
            - name: var-dir
              mountPath: /var/fuel-streams

  volumeClaimTemplates:
    - metadata:
        name: {{ $publisher.storage.name }}
      spec:
        accessModes:
          - {{ $publisher.storage.accessMode }}
        storageClassName: {{ $publisher.storage.storageClass }}
        resources:
          requests:
            storage: {{ $publisher.storage.size }}
{{- end -}}
