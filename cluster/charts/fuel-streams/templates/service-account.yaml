{{- $serviceAccount := .Values.serviceAccount -}}
{{- $serviceAccountDict := dict "root" . "context" $serviceAccount "name" "service-account" "component" "config" -}}
{{- $secretCreatorDict := dict "root" . "context" $serviceAccount "name" "secret-creator" "component" "config" -}}
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  {{- include "k8s.resource-metadata" $serviceAccountDict | nindent 2 }}
automountServiceAccountToken: {{ $serviceAccount.automount }}
{{- end -}}
{{- if and .Values.config.createRoles $serviceAccount.create }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  {{- include "k8s.resource-metadata" $secretCreatorDict | nindent 2 }}
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  verbs: ["get", "watch", "list", "create", "delete"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["configmaps"]
  verbs: ["get", "watch", "list", "create", "delete"]
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["monitoring.coreos.com"]
  resources: ["servicemonitors", "podmonitors", "prometheusrules"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  {{- include "k8s.resource-metadata" $secretCreatorDict | nindent 2 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "fuel-streams.serviceAccountName" . }}
roleRef:
  kind: Role # this must be Role or ClusterRole
  name: {{ include "fuel-streams.fullname" . }}-secret-creator
  apiGroup: rbac.authorization.k8s.io
{{- end -}}
