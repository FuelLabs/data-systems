{{- $dune := .Values.dune -}}
{{- $cronjob := $dune.cronjob -}}
{{- $name := "dune" -}}
{{- $component := "dune" -}}
{{- $serviceDict := dict "root" . "context" $dune "name" $name "component" $component -}}
{{- if $dune.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  {{- include "k8s.resource-metadata" $serviceDict | nindent 2 }}
spec:
  schedule: {{ $cronjob.schedule | quote }}
  concurrencyPolicy: {{ $cronjob.concurrencyPolicy }}
  successfulJobsHistoryLimit: {{ $cronjob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ $cronjob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        {{- include "k8s.template-metadata" $serviceDict | nindent 8 }}
        spec:
          {{- with .Values.dune.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- include "k8s.pod-config.serviceAccount" $serviceDict | nindent 10 }}
          containers:
            - name: dune
              {{- include "k8s.container-config.image" $serviceDict | nindent 14 }}
              command: ["/usr/src/sv-dune"]
              args:
                - "--network"
                - "{{ $dune.network }}"
              {{- include "k8s.container-config.resources" $serviceDict | nindent 14 }}
              {{- include "k8s.container-config.securityContext" $serviceDict | nindent 14 }}
              {{- include "k8s.container-config.ports" $serviceDict | nindent 14 }}
              {{- include "k8s.container-config.env" $serviceDict | nindent 14 }}
              {{- include "k8s.container-config.envFrom" $serviceDict | nindent 14 }}
          restartPolicy: OnFailure
{{- end }}
