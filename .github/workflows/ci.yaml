name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - "*master"

env:
  CARGO_TERM_COLOR: always
  CLICOLOR: 1
  NIGHTLY_RUST_VERSION: nightly-2023-10-29
  REGISTRY: ghcr.io
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1
  RUST_VERSION: 1.75.0

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  ci:
    permissions:
      contents: none
    name: CI
    # needs: [test, check, lockfile, docs, rustfmt, clippy, cffconvert]
    needs: [rustfmt]
    runs-on: ubuntu-latest
    if: "always()"
    steps:
    - name: Failed
      run: exit 1
      if: "contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'skipped')"

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.78"  # STABLE
        components: rustfmt
    - uses: Swatinem/rust-cache@v2
    - name: Check formatting
      run: cargo fmt --all -- --check

  lockfile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    - uses: Swatinem/rust-cache@v2
    - name: "Is lockfile updated?"
      run: cargo update --workspace --locked

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ env.RUST_VERSION }}
        components: clippy
    - uses: Swatinem/rust-cache@v2
    - run: cargo clippy --all-targets --all-features
    - run: cargo check --all-targets
