name: Publish on Crates.io

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true
        type: string

env:
  CI: true
  RUST_VERSION: 1.81.0
  RUST_NIGHTLY_VERSION: nightly-2024-11-06

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  publish-crates:
    name: Publish on Crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Cargo.toml version
        id: check-version
        run: |
          CURRENT_VERSION=$(grep -m1 '^version =' Cargo.toml | cut -d '"' -f2)
          if [ "$CURRENT_VERSION" == "${{ inputs.version }}" ]; then
            echo "skip_steps=true" >> $GITHUB_OUTPUT
          else
            echo "skip_steps=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: ${{ inputs.version != '' && steps.check-version.outputs.skip_steps == 'false' }}
        run: |
          git config --global user.name GitHub Actions
          git config user.email github-actions@github.com

      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cargo-sort@1.0.9

      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cargo-edit@0.12.3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ steps.check-version.outputs.skip_steps == 'false' && env.RUST_NIGHTLY_VERSION || env.RUST_VERSION }}
          target: x86_64-unknown-linux-gnu,wasm32-unknown-unknown
          components: clippy, rustfmt

      - name: Setup Node && PNPM
        if: ${{ inputs.version != '' && steps.check-version.outputs.skip_steps == 'false' }}
        uses: ./.github/actions/setup-node

      - name: Bump Version
        if: ${{ inputs.version != '' && steps.check-version.outputs.skip_steps == 'false' }}
        run: |
          make bump-version VERSION=${{ inputs.version }}
          git add .
          git commit -m "Bump version to v${{ inputs.version }}"
          git push

      - name: Publish Crate
        uses: katyo/publish-crates@v2
        id: publish-crates
        with:
          publish-delay: 60000
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true
